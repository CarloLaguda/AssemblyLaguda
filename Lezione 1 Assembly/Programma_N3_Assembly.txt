  msgMult db "mult: ", 0xA  ;variabile msg per moltiplicazione
  lenMult equ $ - msgMult

  msgSum db "sum: ", 0xA ;variabile msgSum
  lenSum equ $ - msgSum

  nl db 0xA  ;Manda a capo il messaggio
  len_nl equ $ - nl

section .bss
  multi resb 1
  sum resb 1

section .text
global _start

_start:
  ;MOLTIPLICAZIONE
  mov al, 2
  mov bl, 3

  mul bl ;moltiplicazione effettiva
  add al, '0'
  mov [multi], al

  ;SOMMA
  mov al, 2
  mov bl, 3
  
  add al, bl ;somma effettiva
  add al, '0'
  mov [sum], al

    ; Stampo msgMult
  mov eax, 4
  mov ebx, 1
  mov ecx, msgMult
  mov edx, lenMult
  int 80h

    ;Stampo  multi
  mov eax, 4
  mov ebx, 1
  mov ecx, multi
  mov edx, 1
  int 80h
  
    ;va a capo
  mov eax, 4
  mov ebx, 1
  mov ecx, nl
  mov edx, len_nl
  int 80h

    ;Stampo msgSum
  mov eax, 4
  mov ebx, 1
  mov ecx, msgSum
  mov edx, lenSum
  int 80h

    ;Stampo sum
  mov eax, 4
  mov ebx, 1
  mov ecx, sum
  mov edx, 1
  int 80h

  mov eax, 1
  mov ebx, 0
  int 80h